# -*- coding: utf-8 -*-
"""keras_predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1olVyxTXzRGpeGBrBiJM3oYE3QmPBPEcx

# Predict images by loading model in Keras
"""

from tensorflow.keras.models import load_model
import numpy as np
import cv2
import os
import matplotlib.pyplot as plt


def decode_predictions(prediction):
    dict1 = {0: 'Affenpinscher', 1: 'Afghan_Hound', 2: 'African_Hunting_Dog', 3: 'Airedale',
             4: 'American_Staffordshire_Terrier', 5: 'Appenzeller', 6: 'Australian_Terrier', 7: 'Basenji', 8: 'Basset',
             9: 'Beagle', 10: 'Bedlington_Terrier', 11: 'Bernese_Mountain_Dog', 12: 'Black-And-Tan_Coonhound',
             13: 'Blenheim_Spaniel', 14: 'Bloodhound', 15: 'Bluetick', 16: 'Border_Collie', 17: 'Border_Terrier',
             18: 'Borzoi', 19: 'Boston_Bull', 20: 'Bouvier_Des_Flandres', 21: 'Boxer', 22: 'Brabancon_Griffon',
             23: 'Briard', 24: 'Brittany_Spaniel', 25: 'Bull_Mastiff', 26: 'Cairn', 27: 'Cardigan',
             28: 'Chesapeake_Bay_Retriever', 29: 'Chihuahua', 30: 'Chow', 31: 'Clumber', 32: 'Cocker_Spaniel',
             33: 'Collie',
             34: 'Curly-Coated_Retriever', 35: 'Dandie_Dinmont', 36: 'Dhole', 37: 'Dingo', 38: 'Doberman',
             39: 'English_Foxhound', 40: 'English_Setter', 41: 'English_Springer', 42: 'Entlebucher', 43: 'Eskimo_Dog',
             44: 'Flat-Coated_Retriever', 45: 'French_Bulldog', 46: 'German_Shepherd',
             47: 'German_Short-Haired_Pointer',
             48: 'Giant_Schnauzer', 49: 'Golden_Retriever', 50: 'Gordon_Setter', 51: 'Greater_Swiss_Mountain_Dog',
             52: 'Great_Dane', 53: 'Great_Pyrenees', 54: 'Groenendael', 55: 'Ibizan_Hound', 56: 'Irish_Setter',
             57: 'Irish_Terrier', 58: 'Irish_Water_Spaniel', 59: 'Irish_Wolfhound', 60: 'Italian_Greyhound',
             61: 'Japanese_Spaniel', 62: 'Keeshond', 63: 'Kelpie', 64: 'Kerry_Blue_Terrier', 65: 'Komondor',
             66: 'Kuvasz',
             67: 'Labrador_Retriever', 68: 'Lakeland_Terrier', 69: 'Leonberg', 70: 'Lhasa', 71: 'Malamute',
             72: 'Malinois',
             73: 'Maltese_Dog', 74: 'Mexican_Hairless', 75: 'Miniature_Pinscher', 76: 'Miniature_Poodle',
             77: 'Miniature_Schnauzer', 78: 'Newfoundland', 79: 'Norfolk_Terrier', 80: 'Norwegian_Elkhound',
             81: 'Norwich_Terrier', 82: 'Old_English_Sheepdog', 83: 'Otterhound', 84: 'Papillon', 85: 'Pekinese',
             86: 'Pembroke', 87: 'Pomeranian', 88: 'Pug', 89: 'Redbone', 90: 'Rhodesian_Ridgeback', 91: 'Rottweiler',
             92: 'Saint_Bernard', 93: 'Saluki', 94: 'Samoyed', 95: 'Schipperke', 96: 'Scotch_Terrier',
             97: 'Scottish_Deerhound', 98: 'Sealyham_Terrier', 99: 'Shetland_Sheepdog', 100: 'Shih-Tzu',
             101: 'Siberian_Husky', 102: 'Silky_Terrier', 103: 'Soft-Coated_Wheaten_Terrier',
             104: 'Staffordshire_Bullterrier', 105: 'Standard_Poodle', 106: 'Standard_Schnauzer', 107: 'Sussex_Spaniel',
             108: 'Tibetan_Mastiff', 109: 'Tibetan_Terrier', 110: 'Toy_Poodle', 111: 'Toy_Terrier', 112: 'Vizsla',
             113: 'Walker_Hound', 114: 'Weimaraner', 115: 'Welsh_Springer_Spaniel', 116: 'West_Highland_White_Terrier',
             117: 'Whippet', 118: 'Wire-Haired_Fox_Terrier', 119: 'Yorkshire_Terrier'}

    return dict1[prediction]


def predict():
    # Set image and model path
    path = 'predict.jpg'
    MODEL_NAME = 'keras.h5'
    IMG_SIZE = 299

    image = cv2.imread(path, -1)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    image = cv2.resize(image, (IMG_SIZE, IMG_SIZE))
    image = image / 255.
    image = np.reshape(image, (1, IMG_SIZE, IMG_SIZE, 3))

    model = load_model(MODEL_NAME)

    pred = model.predict([image], verbose=1)
    ans = np.argmax(pred)
    per = pred[0][ans]
    per = per*100
    breed = decode_predictions(ans)

    return breed, per